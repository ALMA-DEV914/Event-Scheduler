{"version":3,"sources":["assets/images/cd-logo.svg","assets/images/github-brands.svg","reducers/userReducer.js","reducers/eventsReducer.js","reducers/index.js","actions/actionTypes.js","constants/demoEvents.js","constants/index.js","actions/eventActions.js","actions/userActions.js","utils/classTogglerBuilder.js","utils/validators.js","components/TopBar/SigninForm.js","components/TopBar/SignupForm.js","components/TopBar/ResetForm.js","components/TopBar/LoginModal.js","components/TopBar/index.js","utils/timeConverters.js","components/Schedule/Timeline.js","utils/colorConverters.js","components/Schedule/SingleEvent.js","components/Schedule/EventsGroup.js","components/Schedule/EventFormEditMode.js","components/Schedule/EventFormViewMode.js","components/Schedule/EventModal.js","components/Schedule/index.js","components/BottomInfo.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","isUserLoggedIn","events","error","isLoadingUserEvents","isRequestingEventAPI","combineReducers","User","preState","arguments","length","undefined","action","type","username","Event","Object","objectSpread","concat","toConsumableArray","event","filter","eventIdsToDelete","indexOf","eventId","map","newEvent","demoEvents","title","location","description","color","startAt","endAt","weekday","TIMELINE_UNIT_DURATION","EVENT_SLOT_HEIGHT","MIN_DURATION_TO_RENDER_TIME","MIN_DURATION_TO_RENDER_TITLE","DEFAULT_FROM","DEFAULT_TO","WEEK_DAYS","DEFAULT_EVENT","COLOR_CHOICES","SIGNIN_FORM","RESET_FORM","SIGNUP_FORM","USERNAME","EMAIL","PASSWORD","USERNAME_ERROR","EMAIL_ERROR","PASSWORD_ERROR","USER_API_ROUTE","EVENT_API_ROUTE","AUTH_ERRORS","Unauthorized","JsonWebTokenError","TokenExpiredError","DeletedUser","USER_ERRORS","EmailRegistered","UserNotFound","WrongPassword","EVENT_ERRORS","EventNotFound","setEvents","dispatch","setError","loadUserEvents","axios","get","then","res","userEvents","data","catch","err","response","errorRes","signUserIn","userData","toRememberUser","console","log","token","authToken","defaults","headers","common","expiresAt","Date","now","expiresIn","localStorage","setItem","logUserOut","removeItem","classTogglerBuilder","origin","onTrue","onFalse","condition","userFormInputValidators","_userFormInputValidat","defineProperty","email","test","password","SigninForm","isPasswordHidden","state","_this","handleInputValueChange","target","value","name","setState","toggleHidePassword","preventDefault","stopPropagation","prevState","toggleInputClassBy","toggleSpanClassBy","handleSubmit","fields","errorFields","user","i","input","isWaitingApi","post","props","closeModal","toast","info","checkBox","checked","warn","_this2","this","emailValue","emailError","passwordValue","passwordError","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","id","placeholder","onChange","href","onClick","ref","ele","disabled","Component","mapDispatchToProps","connect","termsNoticeCloseDelay","SignupForm","isTermsShown","toggleTermsDetailsClassBy","newUser","setTimeout","usernameValue","usernameError","lable","onMouseOver","onMouseOut","ResetForm","emailInput","delete","loginModalRoot","document","getElementById","ESC_KEY","LoginModal","escKeyDownHandler","isModalOpen","keyCode","addEventListener","removeEventListener","_userForms","_bottomLinks","_this$props","formToOpen","openModalWithForm","userForms","TopBar_ResetForm","TopBar_SigninForm","TopBar_SignupForm","bottomLinks","ReactDOM","createPortal","data-iscoverlayer","TopBar","isNavListVisible","navClickHandler","tagName","logoutClickHandler","toggleNavListClassBy","navListClass","src","logo","alt","LoginModal_LoginModal","toTimeString","time","Error","hour","minute","String","toNumOfMinutes","timeString","arr","split","parseInt","Timeline","from","to","timeList","push","key","toHexColor","decimal","Number","isInteger","hexColor","toString","toDecimal","charAt","slice","isNaN","SingleEvent","timelineFrom","isOnDesktop","openModal","liStyle","backgroundColor","ifToRenderTime","ifToRenderTitle","aStyle","emStyle","duration","eventTop","eventHeight","top","height","lineHeight","paddingTop","paddingBottom","style","Desktop","react_responsive_default","assign","minWidth","Mobile","maxWidth","EventsGroup","ulCSSHeight","openModalWithEvent","EventsGroup_Desktop","Schedule_SingleEvent","EventsGroup_Mobile","StyledButton","withStyles","root","marginLeft","label","fontSize","Button","customTextField","theme","underline","&:before","borderBottomColor","&:after","fontFamily","&$labelFocused","labelFocused","helperText","classes","otherProps","objectWithoutProperties","TextField_default","InputProps","InputLabelProps","focused","FormHelperTextProps","HeaderTextField","BodyTextField","EventFormEditMode","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deriveStateFrom","other","start","end","headerColor","addEvent","updateEvent","handleCloseModal","isUpdatingEvent","e","promise","patch","updatedEvent","savedEvent","Promise","resolve","eventData","toastMsg","handleColorChange","hex","handleChange","_this$setState","handleDiscard","setViewMode","prevProp","_this$state2","headerStyle","required","margin","inputProps","step","select","MenuItem_default","fullWidth","multiline","rows","react_color_lib","triangle","width","colors","onChangeComplete","EventFormViewMode","handleEditOnClick","setEditMode","handleDeleteOnClick","deleteEvents","idsToDel","eventIds","deletedEventsId","IconButton_default","aria-label","Edit_default","Delete_default","eventModalRoot","EventModal","setIsEditMode","prevProps","eventToShow","classList","add","lastOpenEventId","eventBlockDOM","remove","_this$props2","isEditMode","Schedule_EventFormEditMode","Schedule_EventFormViewMode","StyledTooltip","tooltip","Tooltip","StyledFab","position","right","bottom","zIndex","Fab","Schedule","eventToShowInModal","addButtonClickHandler","organizeEventsByWeekday","timelineTo","eventsByWeekday","Array","isArray","sort","e1","e2","Math","floor","ceil","eventsGroupUlHeight","code","errorName","msg","clearError","CircularProgress_default","Schedule_Timeline","WEEK_DAY","EventsGroup_EventsGroup","placement","Add_default","Schedule_EventModal","BottomInfo","rel","github","window","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","middlewares","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","apply","store","createStore","reducer","getItem","leastValidUntil","DEMO_EVENTS","App","es","components_TopBar","components_Schedule","BottomInfo_BottomInfo","lib","POSITION","TOP_CENTER","autoClose","toastClassName","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","Boolean","hostname","match","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95c6d901.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cd-logo.e688427b.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-brands.3959958a.svg\";","import { USER_SIGN_IN, USER_LOG_OUT } from \"../actions/actionTypes.js\";\n\nconst initialState = {\n    isUserLoggedIn: false\n};\n\nexport default function(preState = initialState, action) {\n    switch (action.type) {\n        case USER_SIGN_IN:\n            const { username } = action;\n            return {\n                isUserLoggedIn: true,\n                username\n            };\n        case USER_LOG_OUT:\n            return initialState;\n        default:\n            return preState;\n    }\n}\n","import {\n    SET_EVENTS,\n    ADD_EVENT,\n    DELETE_EVENTS,\n    UPDATE_EVENT,\n    SET_ERROR,\n    CLEAR_ERROR,\n    LOAD_USER_EVENTS_BEGIN,\n    LOAD_USER_EVENTS_FINISH\n} from \"../actions/actionTypes.js\";\n\nconst initialState = {\n    events: [],\n    error: null,\n    isLoadingUserEvents: false,\n    isRequestingEventAPI: false\n};\n\n// Event reducer\nexport default function(preState = initialState, action) {\n    switch (action.type) {\n        case SET_EVENTS:\n            return {\n                ...preState,\n                events: action.events\n            };\n        case ADD_EVENT:\n            return {\n                ...preState,\n                events: [...preState.events, action.event]\n            };\n        case DELETE_EVENTS:\n            return {\n                ...preState,\n                events: preState.events.filter(\n                    event => action.eventIdsToDelete.indexOf(event.eventId) < 0\n                )\n            };\n        case UPDATE_EVENT:\n            return {\n                ...preState,\n                events: preState.events.map(event =>\n                    event.eventId === action.newEvent.eventId\n                        ? action.newEvent\n                        : event\n                )\n            };\n        case SET_ERROR:\n            return {\n                ...preState,\n                error: action.error\n            };\n        case CLEAR_ERROR:\n            return {\n                ...preState,\n                error: null\n            };\n        case LOAD_USER_EVENTS_BEGIN:\n            return {\n                ...preState,\n                isLoadingUserEvents: true\n            };\n        case LOAD_USER_EVENTS_FINISH:\n            return {\n                ...preState,\n                isLoadingUserEvents: false\n            };\n        default:\n            return preState;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport User from \"./userReducer.js\";\nimport Event from \"./eventsReducer.js\";\n\nexport default combineReducers({\n    User,\n    Event\n});\n","// user action types\nexport const USER_SIGN_IN = \"USER_SIGN_IN\";\nexport const USER_LOG_OUT = \"USER_LOG_OUT\";\n// event action types\nexport const SET_EVENTS = \"SET_EVENTS\";\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const UPDATE_EVENT = \"UPDATE_EVENT\";\nexport const DELETE_EVENTS = \"DELETE_EVENTS\";\nexport const SET_ERROR = \"SET_ERROR\";\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const LOAD_USER_EVENTS_BEGIN = \"LOAD_USER_EVENTS_BEGIN\";\nexport const LOAD_USER_EVENTS_FINISH = \"LOAD_USER_EVENTS_FINISH\";\n","const dayEvents = [\n    {\n        eventId: \"1545273914851\", // Date.now().toString()\n        title: \"Meeting\",\n        location: \"Wheeler 150\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 5734290,\n        startAt: 9 * 60 + 30,\n        endAt: 10 * 60 + 30,\n        weekday: 0\n    },\n    {\n        eventId: \"1545273914852\",\n        title: \"Meeting\",\n        location: \"Wheeler 150\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 5734290,\n        startAt: 12 * 60 + 30,\n        endAt: 14 * 60,\n        weekday: 4\n    },\n    {\n        eventId: \"1545273914853\",\n        title: \"Meeting\",\n        location: \"Wheeler 150\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 5734290,\n        startAt: 9 * 60 + 30,\n        endAt: 10 * 60 + 30,\n        weekday: 3\n    },\n    {\n        eventId: \"1545273914854\",\n        title: \"Meeting\",\n        location: \"Wheeler 150\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 5734290,\n        startAt: 15 * 60 + 30,\n        endAt: 16 * 60 + 30,\n        weekday: 3\n    },\n    {\n        eventId: \"1545273914855\",\n        title: \"Meeting\",\n        location: \"Wheeler 150\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 5734290,\n        startAt: 13 * 60 + 30,\n        endAt: 15 * 60,\n        weekday: 1\n    }\n];\n\nconst phoneCall = [\n    {\n        eventId: \"1545273914856\",\n        title: \"Phone Call\",\n        location: \"Recreational Sports Company\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 4469843,\n        startAt: 11 * 60,\n        endAt: 12 * 60 + 30,\n        weekday: 0\n    },\n    {\n        eventId: \"1545273914857\",\n        title: \"Phone Call\",\n        location: \"AB Company client\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 4469843,\n        startAt: 10 * 60,\n        endAt: 11 * 60,\n        weekday: 1\n    },\n    {\n        eventId: \"1545273914858\",\n        title: \"Phone Call\",\n        location: \"Marketing Team\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 4469843,\n        startAt: 12 * 60,\n        endAt: 13 * 60 + 45,\n        weekday: 2\n    },\n    {\n        eventId: \"1545273914859\",\n        title: \"Phone Call\",\n        location: \"CEO Virginia West\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 4469843,\n        startAt: 17 * 60,\n        endAt: 18 * 60 + 30,\n        weekday: 3\n    },\n    {\n        eventId: \"1545273914860\",\n        title: \"Phone Call\",\n        location: \"Team member AF\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 4469843,\n        startAt: 10 * 60,\n        endAt: 11 * 60,\n        weekday: 4\n    }\n];\n\nconst tasks = [\n    {\n        eventId: \"1545273914861\",\n        title: \"Add features\",\n        location: \"Project 1\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 10664370,\n        startAt: 14 * 60,\n        endAt: 15 * 60 + 15,\n        weekday: 0\n    },\n    {\n        eventId: \"1545273914862\",\n        title: \"Debug\",\n        location: \"Project 2\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 10664370,\n        startAt: 15 * 60 + 45,\n        endAt: 16 * 60 + 45,\n        weekday: 1\n    },\n    {\n        eventId: \"1545273914863\",\n        title: \"Start Project 3\",\n        location: \"Project with ABC client\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 10664370,\n        startAt: 10 * 60 + 45,\n        endAt: 11 * 60 + 45,\n        weekday: 2\n    },\n    {\n        eventId: \"1545273914864\",\n        title: \"Continue Projetc 3\",\n        location: \"Project with ABC client\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 10664370,\n        startAt: 13 * 60 + 45,\n        endAt: 15 * 60,\n        weekday: 2\n    },\n    {\n        eventId: \"1545273914865\",\n        title: \"Review code\",\n        location: \"Project 2\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 10664370,\n        startAt: 15 * 60 + 45,\n        endAt: 16 * 60 + 45,\n        weekday: 4\n    }\n];\n\nconst sendEmails = [\n    {\n        eventId: \"1545273914866\",\n        title: \"Send email to client\",\n        location: \"ABC client\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 16167015,\n        startAt: 11 * 60 + 30,\n        endAt: 13 * 60,\n        weekday: 1\n    },\n    {\n        eventId: \"1545273914867\",\n        title: \"Send email of projetc details\",\n        location: \"Harvested Corporation\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 16167015,\n        startAt: 9 * 60,\n        endAt: 10 * 60 + 15,\n        weekday: 2\n    },\n    {\n        eventId: \"1545273914868\",\n        title: \"Respond emails\",\n        location: \"Gavin Company\",\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit, unde, nulla. Vel unde deleniti, distinctio inventore quis molestiae perferendis, eum quo harum dolorum reiciendis sunt dicta maiores similique! Officiis repellat iure odio debitis enim eius commodi quae deserunt quam assumenda, ab asperiores reiciendis minima maxime odit laborum, libero veniam non?\",\n        color: 16167015,\n        startAt: 12 * 60,\n        endAt: 13 * 60 + 45,\n        weekday: 3\n    }\n];\n\nexport default [...dayEvents, ...phoneCall, ...tasks, ...sendEmails];\n","/********************** local storage related constants **********************/\nexport const LOCAL_USERNAME_KEY = \"USERNAME_KEY\";\nexport const LOCAL_TOKEN_KEY = \"TOKEN_KEY\";\nexport const LOCAL_EXPIRESAT_KEY = \"EXPIRESAT_KEY\";\n\n/********************** Schedule related constants **********************/\n// unit duration of timeline, number of minutes\nexport const TIMELINE_UNIT_DURATION = 30;\n// event slot height in schedule grid, number of px\nexport const EVENT_SLOT_HEIGHT = 50;\n// minimal event duation to render event time span, number of minutes\nexport const MIN_DURATION_TO_RENDER_TIME = 50;\n// minimal event duation to render event title, number of minutes\nexport const MIN_DURATION_TO_RENDER_TITLE = 15;\n// default timeline start time;\nexport const DEFAULT_FROM = 9 * 2 * 30;\n// default timeline end time;\nexport const DEFAULT_TO = 18 * 2 * 30;\n// week days\nexport const WEEK_DAYS = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\"\n];\n// default event info\nexport const DEFAULT_EVENT = {\n    title: \"\", // string, required\n    location: \"\", // string\n    description: \"\", // string\n    color: 6911625, // number, required\n    startAt: 9 * 60, // number, required\n    endAt: 9 * 60 + 30, // number, required\n    weekday: 0 // number, required\n};\n// color choices of color picker\nexport const COLOR_CHOICES = [\n    \"#0693E3\",\n    \"#443453\",\n    \"#555555\",\n    \"#577F92\",\n    \"#697689\",\n    \"#8ED1FC\",\n    \"#A2B9B2\",\n    \"#F6B067\",\n    \"#F57F17\",\n    \"#F78DA7\"\n];\n\n/********************** TopBar related constants **********************/\n// login modal states\nexport const SIGNIN_FORM = \"Signin\";\nexport const RESET_FORM = \"Reset\";\nexport const SIGNUP_FORM = \"Signup\";\n// login/signup form input fields\nexport const USERNAME = \"username\";\nexport const EMAIL = \"email\";\nexport const PASSWORD = \"password\";\n// login/signup form input fields error\nexport const USERNAME_ERROR = \"USERNAME_ERROR\";\nexport const EMAIL_ERROR = \"EMAIL_ERROR\";\nexport const PASSWORD_ERROR = \"PASSWORD_ERROR\";\n\n/********************** API related constants **********************/\n// api routes\nexport const USER_API_ROUTE = \"/api/v1/users\";\nexport const EVENT_API_ROUTE = \"/api/v1/events\";\n// Authentication header prefix\nexport const AUTH_HEADER = \"Bearer\";\n// least time interval after which token be available\nexport const LEAST_TOKEN_AVAILABLE_INTERVAL = 1000 * 60 * 60 * 4; // 4 hours\n// backend error responses\nexport const AUTH_ERRORS = {\n    Unauthorized: \"Unauthorized\",\n    JsonWebTokenError: \"JsonWebTokenError\",\n    TokenExpiredError: \"TokenExpiredError\",\n    DeletedUser: \"DeletedUser\"\n};\n\nexport const USER_ERRORS = {\n    EmailRegistered: \"EmailRegistered\",\n    UserNotFound: \"UserNotFound\",\n    WrongPassword: \"WrongPassword\"\n};\n\nexport const EVENT_ERRORS = { EventNotFound: \"EventNotFound\" };\n\n/********************** demo events **********************/\n// comes from codyHouse simple-schedule template\nexport { default as DEMO_EVENTS } from \"./demoEvents.js\";\n","import axios from \"axios\";\nimport { DEMO_EVENTS, EVENT_API_ROUTE } from \"../constants\";\nimport {\n    SET_EVENTS,\n    ADD_EVENT,\n    DELETE_EVENTS,\n    UPDATE_EVENT,\n    SET_ERROR,\n    CLEAR_ERROR,\n    LOAD_USER_EVENTS_BEGIN,\n    LOAD_USER_EVENTS_FINISH\n} from \"./actionTypes.js\";\n\n// set store's events using given events\nexport const setEvents = events => dispatch => {\n    // events should be an array of event objects\n    dispatch({\n        type: SET_EVENTS,\n        events\n    });\n};\n\n// clear store's events\nexport const clearEvents = () => setEvents([]);\n\n// add event locally\nexport const addEvent = event => dispatch => {\n    dispatch({\n        type: ADD_EVENT,\n        event\n    });\n};\n\n// delete events locally\nexport const deleteEvents = eventIdsToDelete => dispatch => {\n    // eventIdsToDelete should be an array of event ids\n    dispatch({\n        type: DELETE_EVENTS,\n        eventIdsToDelete\n    });\n};\n\n// update event locally\nexport const updateEvent = newEvent => dispatch => {\n    dispatch({\n        type: UPDATE_EVENT,\n        newEvent\n    });\n};\n\nexport const setError = error => dispatch => {\n    dispatch({\n        type: SET_ERROR,\n        error\n    });\n};\n\nexport const clearError = () => dispatch => {\n    dispatch({\n        type: CLEAR_ERROR\n    });\n};\n\n// load demo events\nexport const loadDemoEvents = () => dispatch => {\n    dispatch(setEvents(DEMO_EVENTS));\n};\n\n// todo: handle token expired\n// load user's event from API\nexport const loadUserEvents = () => dispatch => {\n    dispatch({ type: LOAD_USER_EVENTS_BEGIN });\n    axios\n        .get(`${EVENT_API_ROUTE}/all`)\n        .then(res => {\n            dispatch({ type: LOAD_USER_EVENTS_FINISH });\n            const userEvents = res.data.data.events;\n            dispatch(setEvents(userEvents));\n        })\n        .catch(err => {\n            dispatch({ type: LOAD_USER_EVENTS_FINISH });\n            if (err.response) {\n                // http error response\n                const errorRes = err.response.data.error;\n                dispatch(setError(errorRes));\n            } else {\n                // local network error\n                dispatch(setError(err));\n            }\n        });\n};\n","import axios from \"axios\";\nimport { USER_LOG_OUT, USER_SIGN_IN } from \"./actionTypes.js\";\nimport { loadUserEvents, clearEvents } from \"./eventActions.js\";\nimport {\n    AUTH_HEADER,\n    LOCAL_USERNAME_KEY,\n    LOCAL_TOKEN_KEY,\n    LOCAL_EXPIRESAT_KEY\n} from \"../constants\";\n\n/**\n * User sign in action creator, return corresponding action,\n * also set axios auth token and save user info to local\n * @param {Object} userData response data from backend '/users' route\n * @param {Boolean} toRememberUser true if remember user\n */\nexport const signUserIn = (userData, toRememberUser) => dispatch => {\n    console.log(\"sign in user: \", userData);\n    const { username, token } = userData;\n    // bearer token\n    const authToken = `${AUTH_HEADER} ${token}`;\n    // set axios auth token, this will apply to all sequential requests\n    axios.defaults.headers.common[\"Authorization\"] = authToken;\n    // save to localStorage\n    if (toRememberUser) {\n        // number of milesecond at which token expires according to local time\n        const expiresAt = Date.now() + userData.expiresIn * 1000;\n        localStorage.setItem(LOCAL_USERNAME_KEY, username);\n        localStorage.setItem(LOCAL_TOKEN_KEY, token);\n        localStorage.setItem(LOCAL_EXPIRESAT_KEY, expiresAt);\n    }\n    // dispatch signin action\n    dispatch({\n        type: USER_SIGN_IN,\n        username\n    });\n    // dispatch load user events action\n    dispatch(loadUserEvents());\n};\n\nexport const logUserOut = () => dispatch => {\n    // delete axios auth token, this will apply to all sequential requests\n    delete axios.defaults.headers.common[\"Authorization\"];\n    // delete user info in localStorage\n    localStorage.removeItem(LOCAL_USERNAME_KEY);\n    localStorage.removeItem(LOCAL_TOKEN_KEY);\n    localStorage.removeItem(LOCAL_EXPIRESAT_KEY);\n    // dispatch log out action\n    dispatch({\n        type: USER_LOG_OUT\n    });\n    // dispatch clear events action\n    dispatch(clearEvents());\n};\n","/**\n * A reusable function builder to toggle class list by given condition\n * @param {String} origin origin class list\n * @param {String} onTrue classList to toggle when True\n * @param {String} onFalse classList to toggle when False\n */\nexport default function classTogglerBuilder(origin, onTrue, onFalse) {\n    /**\n     * @param {boolean} condition\n     */\n    const toggleClassBy = condition => {\n        if (condition) {\n            return origin + (onTrue ? \" \" + onTrue : \"\");\n        } else {\n            return origin + (onFalse ? \" \" + onFalse : \"\");\n        }\n    };\n    return toggleClassBy;\n}\n","import {\n    USERNAME,\n    EMAIL,\n    PASSWORD,\n    USERNAME_ERROR,\n    EMAIL_ERROR,\n    PASSWORD_ERROR\n} from \"../constants\";\n\n// functions to validate various form inputs\n\n/**\n * validate if it is email\n * @param {String} email\n * @returns {Object} Object with specific key, if input is truthy and invalid, value is truthy, otherwise value is an empty string, which is falsy.\n */\nexport const validateEmail = email => {\n    // see: https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n    const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return {\n        [EMAIL_ERROR]: !email || reg.test(email) ? \"\" : \"Invalid email address\"\n    };\n};\n\n/**\n * validate if username matches requirement\n * @param {String} username\n * @returns {Object} Object with specific key, if input is truthy and invalid, value is truthy, otherwise value is an empty string, which is falsy.\n */\nexport const validateUsername = username => {\n    // User name must be 2-12 long,\n    // no leading/ending space or \".\"\n\n    // const reg = /^(?=.{2,12}$)(?![.\\s])[a-zA-Z0-9._\\s]+(?<![.\\s])$/;\n    // fix \"SyntaxError: Invalid regular expression: invalid group specifier name\" on safari\n    const reg = /^[a-zA-Z0-9](_(?!(\\.|_))|\\.(?!(_|\\.))|[a-zA-Z0-9]){0,10}[a-zA-Z0-9]$/;\n    return {\n        [USERNAME_ERROR]:\n            !username || reg.test(username)\n                ? \"\"\n                : \"2~12 long alphabets and numbers, no leading/ending space or .\"\n    };\n};\n\n/**\n * validate if password matches requirement\n * @param {String} password\n * @returns {Object} Object with specific key, if input is truthy and invalid, value is truthy, otherwise value is an empty string, which is falsy.\n */\nexport const validatePassword = password => {\n    // password must be 4-30 long, accepts digits, lower/upper case and !@#$%^&\n    const reg = /^[a-zA-Z0-9!@#$%^&]{4,30}$/;\n    return {\n        [PASSWORD_ERROR]:\n            !password || reg.test(password)\n                ? \"\"\n                : \"4~30 long alphabets, numbers and symbols of !@#$%^&\"\n    };\n};\n\n// group up user form input validators ,return different validator according to target name\nexport const userFormInputValidators = {\n    [EMAIL]: validateEmail,\n    [USERNAME]: validateUsername,\n    [PASSWORD]: validatePassword\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport { signUserIn } from \"../../actions/userActions.js\";\nimport classTogglerBuilder from \"../../utils/classTogglerBuilder.js\";\nimport { userFormInputValidators } from \"../../utils/validators.js\";\nimport {\n    EMAIL,\n    EMAIL_ERROR,\n    PASSWORD,\n    PASSWORD_ERROR,\n    USER_API_ROUTE,\n    USER_ERRORS\n} from \"../../constants\";\n\nimport \"../../styles/UserForm.css\";\n\nclass SigninForm extends Component {\n    static propTypes = {\n        closeModal: PropTypes.func,\n        signUserIn: PropTypes.func\n    };\n\n    initialState = {\n        isPasswordHidden: true,\n        [EMAIL]: \"\",\n        [EMAIL_ERROR]: \"\",\n        [PASSWORD]: \"\",\n        [PASSWORD_ERROR]: \"\",\n        isWaitingApi: false\n    };\n\n    state = { ...this.initialState };\n\n    handleInputValueChange = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        // validate input and get error object\n        const err = userFormInputValidators[name](value);\n        this.setState({\n            ...err,\n            [name]: value\n        });\n    };\n\n    toggleHidePassword = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(prevState => ({\n            isPasswordHidden: !prevState.isPasswordHidden\n        }));\n    };\n\n    toggleInputClassBy = classTogglerBuilder(\n        \"cd-signin-modal__input cd-signin-modal__input--full-width cd-signin-modal__input--has-padding cd-signin-modal__input--has-border\",\n        \"cd-signin-modal__input--has-error\"\n    );\n\n    toggleSpanClassBy = classTogglerBuilder(\n        \"cd-signin-modal__error\",\n        \"cd-signin-modal__error--is-visible\"\n    );\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // check if required field is empty\n        const fields = [EMAIL, PASSWORD];\n        const errorFields = [EMAIL_ERROR, PASSWORD_ERROR];\n        const user = {};\n        for (let i = 0; i < fields.length; i++) {\n            let input = this.state[fields[i]];\n            if (!input) {\n                return this.setState({\n                    [errorFields[i]]: \"This field is required\"\n                });\n            }\n            user[fields[i]] = input;\n        }\n        // set state to indicate waiting api response\n        this.setState({ isWaitingApi: true });\n        // make a request to api\n        axios\n            .post(`${USER_API_ROUTE}/login`, user)\n            .then(res => {\n                // reset state then close modal\n                this.setState({ ...this.initialState });\n                this.props.closeModal();\n                toast.info(\"🎉 You are logged in!\");\n                // dispatch signin action\n                this.props.signUserIn(res.data.data, this.checkBox.checked);\n            })\n            .catch(err => {\n                this.setState({ isWaitingApi: false });\n                if (err.response) {\n                    const errorRes = err.response.data.error;\n                    console.log(errorRes);\n                    if (errorRes.name === USER_ERRORS.UserNotFound) {\n                        this.setState({\n                            [EMAIL_ERROR]: \"Cannot find account with this email\"\n                        });\n                    }\n                    if (errorRes.name === USER_ERRORS.WrongPassword) {\n                        this.setState({\n                            [PASSWORD_ERROR]: \"Wrong password\"\n                        });\n                    }\n                } else {\n                    // network error\n                    console.log(err);\n                    toast.warn(\"😱 Connection to server failed\");\n                }\n            });\n    };\n\n    render() {\n        const emailValue = this.state[EMAIL],\n            emailError = this.state[EMAIL_ERROR],\n            passwordValue = this.state[PASSWORD],\n            passwordError = this.state[PASSWORD_ERROR];\n        const { isPasswordHidden, isWaitingApi } = this.state;\n        return (\n            <form\n                className=\"cd-signin-modal__form\"\n                onSubmit={this.handleSubmit}\n            >\n                <p className=\"cd-signin-modal__fieldset\">\n                    <label\n                        className=\"cd-signin-modal__label cd-signin-modal__label--email cd-signin-modal__label--image-replace\"\n                        htmlFor=\"signin-email\"\n                    >\n                        E-mail\n                    </label>\n                    <input\n                        id=\"signin-email\"\n                        type=\"email\"\n                        placeholder=\"E-mail\"\n                        name={EMAIL}\n                        value={emailValue}\n                        onChange={this.handleInputValueChange}\n                        className={this.toggleInputClassBy(emailError)}\n                    />\n                    <span className={this.toggleSpanClassBy(emailError)}>\n                        {emailError}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <label\n                        className=\"cd-signin-modal__label cd-signin-modal__label--password cd-signin-modal__label--image-replace\"\n                        htmlFor=\"signin-password\"\n                    >\n                        Password\n                    </label>\n                    <input\n                        id=\"signin-password\"\n                        placeholder=\"Password\"\n                        name={PASSWORD}\n                        value={passwordValue}\n                        onChange={this.handleInputValueChange}\n                        type={isPasswordHidden ? \"password\" : \"text\"}\n                        className={this.toggleInputClassBy(passwordError)}\n                    />\n                    <a\n                        href=\"#0\"\n                        className=\"cd-signin-modal__hide-password js-hide-password\"\n                        onClick={this.toggleHidePassword}\n                    >\n                        {isPasswordHidden ? \"Show\" : \"Hide\"}\n                    </a>\n                    <span className={this.toggleSpanClassBy(passwordError)}>\n                        {passwordError}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"remember-me\"\n                        className=\"cd-signin-modal__input\"\n                        ref={ele => (this.checkBox = ele)}\n                    />\n                    <label htmlFor=\"remember-me\" className=\"checkBox-label\">\n                        Remember me\n                    </label>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <input\n                        className=\"cd-signin-modal__input cd-signin-modal__input--full-width\"\n                        type=\"submit\"\n                        disabled={isWaitingApi}\n                        value={\n                            this.state.isWaitingApi\n                                ? \"Waiting response...\"\n                                : \"Login\"\n                        }\n                    />\n                </p>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = { signUserIn };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SigninForm);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport classTogglerBuilder from \"../../utils/classTogglerBuilder.js\";\nimport { userFormInputValidators } from \"../../utils/validators.js\";\nimport { connect } from \"react-redux\";\nimport { signUserIn } from \"../../actions/userActions.js\";\nimport {\n    USERNAME,\n    USERNAME_ERROR,\n    EMAIL,\n    EMAIL_ERROR,\n    PASSWORD,\n    PASSWORD_ERROR,\n    USER_API_ROUTE,\n    USER_ERRORS\n} from \"../../constants\";\n\nimport \"../../styles/UserForm.css\";\n\nconst terms =\n    \"Terms: Your data won't be permanently preserved in the database since this is a demo website, the database periodically cleans up each week. You may want to signup again after that.\";\n\nconst termsCloseDelayOnHover = 200;\nconst termsNoticeCloseDelay = 1000;\n\nclass SignupForm extends Component {\n    static propTypes = {\n        closeModal: PropTypes.func,\n        signUserIn: PropTypes.func.isRequired\n    };\n\n    initialState = {\n        isPasswordHidden: true,\n        isTermsShown: false,\n        [USERNAME]: \"\",\n        [USERNAME_ERROR]: \"\",\n        [EMAIL]: \"\",\n        [EMAIL_ERROR]: \"\",\n        [PASSWORD]: \"\",\n        [PASSWORD_ERROR]: \"\",\n        isWaitingApi: false\n    };\n\n    state = { ...this.initialState };\n\n    handleInputValueChange = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        // validate input and get error object\n        const err = userFormInputValidators[name](value);\n        this.setState({\n            ...err,\n            [name]: value\n        });\n    };\n\n    toggleHidePassword = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(prevState => ({\n            isPasswordHidden: !prevState.isPasswordHidden\n        }));\n    };\n\n    toggleInputClassBy = classTogglerBuilder(\n        \"cd-signin-modal__input cd-signin-modal__input--full-width cd-signin-modal__input--has-padding cd-signin-modal__input--has-border\",\n        \"cd-signin-modal__input--has-error\"\n    );\n\n    toggleSpanClassBy = classTogglerBuilder(\n        \"cd-signin-modal__error\",\n        \"cd-signin-modal__error--is-visible\"\n    );\n\n    toggleTermsDetailsClassBy = classTogglerBuilder(\n        \"signup-form-terms-detail\",\n        \"signup-form-terms-detail--is-visible\"\n    );\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // check if required field is empty\n        const fields = [USERNAME, EMAIL, PASSWORD];\n        const errorFields = [USERNAME_ERROR, EMAIL_ERROR, PASSWORD_ERROR];\n        const newUser = {};\n        for (let i = 0; i < fields.length; i++) {\n            let input = this.state[fields[i]];\n            if (!input) {\n                return this.setState({\n                    [errorFields[i]]: \"This field is required\"\n                });\n            }\n            newUser[fields[i]] = input;\n        }\n        // check box\n        if (!this.checkBox.checked) {\n            this.setState({ isTermsShown: true });\n            return setTimeout(() => {\n                this.setState({ isTermsShown: false });\n            }, termsNoticeCloseDelay);\n        }\n        // set state to indicate waiting api response\n        this.setState({ isWaitingApi: true });\n        // make a request to api\n        axios\n            .post(`${USER_API_ROUTE}/signup`, newUser)\n            .then(res => {\n                // reset state then close modal\n                this.setState({ ...this.initialState });\n                this.props.closeModal();\n                toast.info(\"🎉 You are logged in!\");\n                // dispatch signin action, remember user by default\n                this.props.signUserIn(res.data.data, true);\n            })\n            .catch(err => {\n                this.setState({ isWaitingApi: false });\n                if (err.response) {\n                    const errorRes = err.response.data.error;\n                    console.log(errorRes);\n                    if (errorRes.name === USER_ERRORS.EmailRegistered) {\n                        this.setState({\n                            [EMAIL_ERROR]:\n                                \"This email has been registered, use a different email address\"\n                        });\n                    }\n                } else {\n                    // network error\n                    console.log(err);\n                    toast.warn(\"😱 Connection to server failed\");\n                }\n            });\n    };\n\n    render() {\n        const usernameValue = this.state[USERNAME],\n            usernameError = this.state[USERNAME_ERROR],\n            emailValue = this.state[EMAIL],\n            emailError = this.state[EMAIL_ERROR],\n            passwordValue = this.state[PASSWORD],\n            passwordError = this.state[PASSWORD_ERROR];\n        const { isPasswordHidden, isWaitingApi } = this.state;\n        return (\n            <form\n                className=\"cd-signin-modal__form\"\n                onSubmit={this.handleSubmit}\n            >\n                <p className=\"cd-signin-modal__fieldset\">\n                    <label\n                        className=\"cd-signin-modal__label cd-signin-modal__label--username cd-signin-modal__label--image-replace\"\n                        htmlFor=\"signup-username\"\n                    >\n                        Username\n                    </label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        name={USERNAME}\n                        value={usernameValue}\n                        onChange={this.handleInputValueChange}\n                        className={this.toggleInputClassBy(usernameError)}\n                    />\n                    <span className={this.toggleSpanClassBy(usernameError)}>\n                        {usernameError}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <label\n                        className=\"cd-signin-modal__label cd-signin-modal__label--email cd-signin-modal__label--image-replace\"\n                        htmlFor=\"signup-email\"\n                    >\n                        E-mail\n                    </label>\n                    <input\n                        id=\"signup-email\"\n                        type=\"email\"\n                        placeholder=\"E-mail\"\n                        name={EMAIL}\n                        value={emailValue}\n                        onChange={this.handleInputValueChange}\n                        className={this.toggleInputClassBy(emailError)}\n                    />\n                    <span className={this.toggleSpanClassBy(emailError)}>\n                        {emailError}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <label\n                        className=\"cd-signin-modal__label cd-signin-modal__label--password cd-signin-modal__label--image-replace\"\n                        htmlFor=\"signup-password\"\n                    >\n                        Password\n                    </label>\n                    <input\n                        id=\"signup-password\"\n                        placeholder=\"Password\"\n                        name={PASSWORD}\n                        value={passwordValue}\n                        onChange={this.handleInputValueChange}\n                        type={isPasswordHidden ? \"password\" : \"text\"}\n                        className={this.toggleInputClassBy(passwordError)}\n                    />\n                    <a\n                        href=\"#0\"\n                        className=\"cd-signin-modal__hide-password js-hide-password\"\n                        onClick={this.toggleHidePassword}\n                    >\n                        {isPasswordHidden ? \"Show\" : \"Hide\"}\n                    </a>\n                    <span className={this.toggleSpanClassBy(passwordError)}>\n                        {passwordError}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"accept-terms\"\n                        className=\"cd-signin-modal__input\"\n                        ref={ele => (this.checkBox = ele)}\n                    />\n                    <label\n                        htmlFor=\"accept-terms\"\n                        className=\"checkBox-label\"\n                        ref={ele => (this.lable = ele)}\n                    >\n                        I agree to the{\" \"}\n                        <span\n                            className=\"signup-form-terms\"\n                            onMouseOver={() => {\n                                this.setState({ isTermsShown: true });\n                            }}\n                            onMouseOut={() => {\n                                setTimeout(() => {\n                                    this.setState({ isTermsShown: false });\n                                }, termsCloseDelayOnHover);\n                            }}\n                        >\n                            Terms\n                        </span>\n                    </label>\n                    <span\n                        className={this.toggleTermsDetailsClassBy(\n                            this.state.isTermsShown\n                        )}\n                    >\n                        {terms}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <input\n                        className=\"cd-signin-modal__input cd-signin-modal__input--full-width cd-signin-modal__input--has-padding\"\n                        type=\"submit\"\n                        disabled={isWaitingApi}\n                        value={\n                            this.state.isWaitingApi\n                                ? \"Waiting response...\"\n                                : \"Create account\"\n                        }\n                    />\n                </p>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = { signUserIn };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignupForm);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport classTogglerBuilder from \"../../utils/classTogglerBuilder.js\";\nimport { userFormInputValidators } from \"../../utils/validators.js\";\nimport {\n    EMAIL,\n    EMAIL_ERROR,\n    USER_API_ROUTE,\n    USER_ERRORS\n} from \"../../constants\";\n\nimport \"../../styles/UserForm.css\";\n\nclass ResetForm extends Component {\n    static propTypes = {\n        closeModal: PropTypes.func\n    };\n\n    initialState = {\n        [EMAIL]: \"\",\n        [EMAIL_ERROR]: \"\",\n        isWaitingApi: false\n    };\n\n    state = { ...this.initialState };\n\n    handleInputValueChange = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        // validate input and get error object\n        const err = userFormInputValidators[name](value);\n        this.setState({\n            ...err,\n            [name]: value\n        });\n    };\n\n    toggleInputClassBy = classTogglerBuilder(\n        \"cd-signin-modal__input cd-signin-modal__input--full-width cd-signin-modal__input--has-padding cd-signin-modal__input--has-border\",\n        \"cd-signin-modal__input--has-error\"\n    );\n\n    toggleSpanClassBy = classTogglerBuilder(\n        \"cd-signin-modal__error\",\n        \"cd-signin-modal__error--is-visible\"\n    );\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // check if required field is empty\n        const emailInput = this.state[EMAIL];\n        if (!emailInput) {\n            return this.setState({\n                [EMAIL_ERROR]: \"This field is required\"\n            });\n        }\n        // set state to indicate waiting api response\n        this.setState({ isWaitingApi: true });\n        // make a request to api\n        axios\n            .delete(`${USER_API_ROUTE}`, { data: { email: emailInput } })\n            .then(res => {\n                // reset state and close modal\n                this.setState({ ...this.initialState });\n                this.props.closeModal();\n                toast.warn(\"☠️ Account deleted!\");\n            })\n            .catch(err => {\n                this.setState({ isWaitingApi: false });\n                if (err.response) {\n                    const errorRes = err.response.data.error;\n                    console.log(errorRes);\n                    if (errorRes.name === USER_ERRORS.UserNotFound)\n                        this.setState({\n                            [EMAIL_ERROR]: \"Cannot find account with this email\"\n                        });\n                } else {\n                    // network error\n                    console.log(err);\n                    toast.warn(\"😱 Connection to server failed\");\n                }\n            });\n    };\n\n    render() {\n        const emailValue = this.state[EMAIL],\n            emailError = this.state[EMAIL_ERROR],\n            isWaitingApi = this.state.isWaitingApi;\n        return (\n            <form\n                className=\"cd-signin-modal__form\"\n                onSubmit={this.handleSubmit}\n            >\n                <p className=\"cd-signin-modal__fieldset\">\n                    <label\n                        className=\"cd-signin-modal__label cd-signin-modal__label--email cd-signin-modal__label--image-replace\"\n                        htmlFor=\"reset-email\"\n                    >\n                        E-mail\n                    </label>\n                    <input\n                        id=\"reset-email\"\n                        type=\"email\"\n                        placeholder=\"E-mail\"\n                        name={EMAIL}\n                        value={emailValue}\n                        onChange={this.handleInputValueChange}\n                        className={this.toggleInputClassBy(emailError)}\n                    />\n                    <span className={this.toggleSpanClassBy(emailError)}>\n                        {emailError}\n                    </span>\n                </p>\n\n                <p className=\"cd-signin-modal__fieldset\">\n                    <input\n                        className=\"cd-signin-modal__input cd-signin-modal__input--full-width cd-signin-modal__input--has-padding\"\n                        type=\"submit\"\n                        disabled={isWaitingApi}\n                        // origin: value=\"Reset password\"\n                        value={\n                            isWaitingApi\n                                ? \"Waiting response...\"\n                                : \"Reset account\"\n                        }\n                    />\n                </p>\n            </form>\n        );\n    }\n}\n\nexport default ResetForm;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { SIGNIN_FORM, RESET_FORM, SIGNUP_FORM } from \"../../constants\";\nimport SigninForm from \"./SigninForm.js\";\nimport SignupForm from \"./SignupForm.js\";\nimport ResetForm from \"./ResetForm.js\";\nimport \"../../styles/LoginModal.css\";\n\n// login modal root in index.html\nconst loginModalRoot = document.getElementById(\"login-modal-root\");\n\n// ESC key code\nconst ESC_KEY = 27;\n\nexport default class LoginModal extends Component {\n    // prop types\n    static propTypes = {\n        isModalOpen: PropTypes.bool,\n        formToOpen: PropTypes.string,\n        closeModal: PropTypes.func,\n        openModalWithForm: PropTypes.func\n    };\n\n    escKeyDownHandler = event => {\n        event.stopPropagation();\n        if (this.props.isModalOpen && event.keyCode === ESC_KEY) {\n            this.props.closeModal();\n        }\n    };\n\n    componentDidMount() {\n        // add event listener for esc key down\n        document.addEventListener(\"keydown\", this.escKeyDownHandler);\n    }\n\n    componentWillUnmount() {\n        // remove event listener\n        document.removeEventListener(\"keydown\", this.escKeyDownHandler);\n    }\n\n    render() {\n        const {\n            isModalOpen,\n            formToOpen,\n            closeModal,\n            openModalWithForm\n        } = this.props;\n\n        // enums object for conditional rendering forms\n        const userForms = {\n            [RESET_FORM]: <ResetForm closeModal={this.props.closeModal} />,\n            [SIGNIN_FORM]: <SigninForm closeModal={this.props.closeModal} />,\n            [SIGNUP_FORM]: <SignupForm closeModal={this.props.closeModal} />\n        };\n\n        // enums object for conditional rendering bottom links\n        const bottomLinks = {\n            [RESET_FORM]: (\n                <p className=\"cd-signin-modal__bottom-message\">\n                    <a href=\"#0\" onClick={openModalWithForm(SIGNIN_FORM)}>\n                        Back to log-in\n                    </a>\n                </p>\n            ),\n            [SIGNIN_FORM]: (\n                <p className=\"cd-signin-modal__bottom-message\">\n                    <a href=\"#0\" onClick={openModalWithForm(RESET_FORM)}>\n                        reset account\n                    </a>\n                </p>\n            ),\n            [SIGNUP_FORM]: null\n        };\n\n        return ReactDOM.createPortal(\n            <div\n                className={\n                    isModalOpen\n                        ? \"cd-signin-modal cd-signin-modal--is-visible\"\n                        : \"cd-signin-modal\"\n                }\n            >\n                {/* Cover Layer */}\n                <div\n                    data-iscoverlayer=\"true\"\n                    className=\"login-modal-cover-layer\"\n                    onClick={closeModal}\n                />\n\n                {/* Forms Container */}\n                <div className=\"cd-signin-modal__container\">\n                    {/* Signin/Signup tabs */}\n                    <ul className=\"cd-signin-modal__switcher js-signin-modal-switcher\">\n                        <li>\n                            <a\n                                href=\"#0\"\n                                onClick={openModalWithForm(SIGNIN_FORM)}\n                                className={\n                                    formToOpen !== SIGNUP_FORM\n                                        ? \"cd-selected\"\n                                        : \"\"\n                                }\n                            >\n                                Sign in\n                            </a>\n                        </li>\n                        <li>\n                            <a\n                                href=\"#0\"\n                                onClick={openModalWithForm(SIGNUP_FORM)}\n                                className={\n                                    formToOpen === SIGNUP_FORM\n                                        ? \"cd-selected\"\n                                        : \"\"\n                                }\n                            >\n                                New account\n                            </a>\n                        </li>\n                    </ul>\n                    {/* user form block */}\n                    <div className=\"cd-signin-modal__block cd-signin-modal__block--is-selected\">\n                        {// top message for reset form\n                        formToOpen === RESET_FORM && (\n                            <p className=\"cd-signin-modal__message\">\n                                Lost your password? Please enter your email\n                                address. Your account will be reset.\n                            </p>\n                        )}\n                        {userForms[formToOpen]}\n                        {bottomLinks[formToOpen]}\n                    </div>\n                    {/* close modal anchor */}\n                    <a\n                        href=\"#0\"\n                        className=\"cd-signin-modal__close\"\n                        onClick={closeModal}\n                    >\n                        Close\n                    </a>\n                </div>\n            </div>,\n            loginModalRoot\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport LoginModal from \"./LoginModal.js\";\nimport { RESET_FORM, SIGNIN_FORM, SIGNUP_FORM } from \"../../constants\";\nimport { logUserOut } from \"../../actions/userActions.js\";\nimport { toast } from \"react-toastify\";\nimport classTogglerBuilder from \"../../utils/classTogglerBuilder.js\";\n\nimport logo from \"../../assets/images/cd-logo.svg\";\nimport \"../../styles/TopBar.css\";\n\nclass TopBar extends Component {\n    static propTypes = {\n        logUserOut: PropTypes.func,\n        isUserLoggedIn: PropTypes.bool,\n        username: PropTypes.string\n    };\n\n    state = {\n        isNavListVisible: false,\n        isModalOpen: false,\n        formToOpen: SIGNIN_FORM\n    };\n\n    // if width of web page is more than 768px,\n    // nav's child node ul will overlap nav,\n    // at this time, click's event.target is ul.\n    // Only set state to toggle li open/close when in mobile\n    navClickHandler = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        // check event target's tagName, only set state when it's \"NAV\"\n        if (event.target.tagName === \"NAV\") {\n            this.setState(prevState => ({\n                isNavListVisible: !prevState.isNavListVisible\n            }));\n        }\n    };\n\n    // open modal with specific form\n    openModalWithForm = formToOpen => event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        // make sure formToOpen is one of three pre-defined forms\n        if (\n            formToOpen === RESET_FORM ||\n            formToOpen === SIGNIN_FORM ||\n            formToOpen === SIGNUP_FORM\n        )\n            this.setState({ isModalOpen: true, formToOpen });\n        else return;\n    };\n\n    closeModal = event => {\n        if (event) event.preventDefault();\n        this.setState({ isModalOpen: false });\n    };\n\n    logoutClickHandler = event => {\n        event.stopPropagation();\n        event.preventDefault();\n        toast.info(\"👋 See ya~\");\n        this.props.logUserOut();\n    };\n\n    toggleNavListClassBy = classTogglerBuilder(\n        \"cd-main-nav__list\",\n        \"cd-main-nav__list--is-visible\"\n    );\n\n    render() {\n        let navListClass = this.toggleNavListClassBy(\n            this.state.isNavListVisible\n        );\n        return (\n            <div>\n                <header className=\"cd-main-header\">\n                    <div className=\"cd-main-header__logo\">\n                        <img src={logo} alt=\"Logo\" />\n                        <span className=\"header-title\">Event Scheduler</span>\n                    </div>\n\n                    <nav className=\"cd-main-nav\" onClick={this.navClickHandler}>\n                        <ul className={navListClass}>\n                            <li>\n                                {this.props.isUserLoggedIn ? (\n                                    <span\n                                        className=\"cd-main-nav__item top-bar-nav--welcome-msg\"\n                                        href=\"#0\"\n                                    >\n                                        {`Hi there, ${this.props.username}`}\n                                    </span>\n                                ) : (\n                                    <a\n                                        className=\"cd-main-nav__item cd-main-nav__item--signin\"\n                                        href=\"#0\"\n                                        onClick={this.openModalWithForm(\n                                            SIGNIN_FORM\n                                        )}\n                                    >\n                                        Sign in\n                                    </a>\n                                )}\n                            </li>\n                            <li>\n                                {this.props.isUserLoggedIn ? (\n                                    <a\n                                        className=\"cd-main-nav__item top-bar-nav__item--logout\"\n                                        href=\"#0\"\n                                        onClick={this.logoutClickHandler}\n                                    >\n                                        Log out\n                                    </a>\n                                ) : (\n                                    <a\n                                        className=\"cd-main-nav__item cd-main-nav__item--signup\"\n                                        href=\"#0\"\n                                        onClick={this.openModalWithForm(\n                                            SIGNUP_FORM\n                                        )}\n                                    >\n                                        Sign up\n                                    </a>\n                                )}\n                            </li>\n                        </ul>\n                    </nav>\n                </header>\n                {/* if simply mount and unmout modal according to state, \n                there will be no animation for modal */}\n                <LoginModal\n                    isModalOpen={this.state.isModalOpen}\n                    formToOpen={this.state.formToOpen}\n                    closeModal={this.closeModal}\n                    openModalWithForm={this.openModalWithForm}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserLoggedIn: state.User.isUserLoggedIn,\n        username: state.User.username\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { logUserOut }\n)(TopBar);\n","// Convert number of minutes to time string like \"09:00\"\nexport function toTimeString(time) {\n    if (typeof time !== \"number\" || time < 0 || time > 1440)\n        return new Error(\"Invalid input for toTimeString()\");\n\n    let hour = ~~(time / 60);\n    let minute = ~~(time % 60);\n\n    hour = hour < 10 ? \"0\" + hour : String(hour);\n    minute = minute < 10 ? \"0\" + minute : String(minute);\n\n    return `${hour}:${minute}`;\n}\n\n// Convert a time string to number of minutes\nexport function toNumOfMinutes(timeString) {\n    if (!timeString) return 0;\n    if (typeof timeString !== \"string\")\n        return new Error(\"Invalid input for toNumberOfMinutes()\");\n\n    const arr = timeString.split(\":\");\n    if (arr.length !== 2)\n        return new Error(\"Invalid input for toNumberOfMinutes()\");\n\n    return parseInt(arr[0]) * 60 + parseInt(arr[1]);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { TIMELINE_UNIT_DURATION } from \"../../constants\";\nimport \"../../styles/Timeline.css\";\n\n// Timeline of Schedule\nfunction Timeline(props) {\n    const { from, to } = props;\n    // each element in timelist represents a vertical line in events grid\n    const timeList = [];\n    for (let time = from; time < to; time += TIMELINE_UNIT_DURATION) {\n        timeList.push(\n            <li key={time}>\n                <span>{toTimeString(time)}</span>\n            </li>\n        );\n    }\n    return (\n        <div className=\"timeline\">\n            <ul>{timeList}</ul>\n        </div>\n    );\n}\n\n// prop types\nTimeline.propTypes = {\n    from: PropTypes.number.isRequired,\n    to: PropTypes.number.isRequired\n};\n\nexport default Timeline;\n","/**\n * Convert a decimal integer to html hex color string\n * @param {Number} decimal must be integer in range [0, 16777215]\n * @returns {String} html hex color string\n */\nexport const toHexColor = decimal => {\n    // input validation\n    if (!Number.isInteger(decimal)) {\n        console.error(`Input ${decimal} for toHexColor() is invalid`);\n        return \"#ffffff\";\n    }\n    // boundary checking\n    if (decimal < 0 || decimal > 16777215) {\n        console.warn(`Input ${decimal} for toHexColor() is out of bound`);\n        return \"#ffffff\";\n    }\n    // convert decimal to hex color\n    let hexColor = decimal.toString(16);\n    // fill '0' until length === 6\n    while (hexColor.length < 6) {\n        hexColor = \"0\" + hexColor;\n    }\n    // html hex color string has '#' prefix\n    return \"#\" + hexColor;\n};\n\n/**\n * Convert a html hex color string to decimal integer value\n * @param {String} hexColor html hex color string\n * @returns {Number} html color decimal integer\n */\nexport const toDecimal = hexColor => {\n    // input validation\n    if (\n        typeof hexColor !== \"string\" ||\n        hexColor.length !== 7 ||\n        hexColor.charAt(0) !== \"#\"\n    ) {\n        console.error(`Input ${hexColor} for toDecimal() is invalid`);\n        return 0;\n    }\n    // get rid of '#' prefix and parse to integer\n    const value = parseInt(hexColor.slice(1), 16);\n    // check if value is NaN, which indicates given input is not a hex color string\n    if (Number.isNaN(value)) {\n        console.warn(\n            `Input ${hexColor} for toDecimal() is not a valid hex color string`\n        );\n        return 16777215;\n    }\n    return value;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { toHexColor } from \"../../utils/colorConverters.js\";\nimport {\n    EVENT_SLOT_HEIGHT,\n    TIMELINE_UNIT_DURATION,\n    MIN_DURATION_TO_RENDER_TIME,\n    MIN_DURATION_TO_RENDER_TITLE\n} from \"../../constants\";\n\nimport \"../../styles/SingleEvent.css\";\n\nfunction SingleEvent(props) {\n    const { event, timelineFrom, isOnDesktop, openModal } = props;\n    const { eventId, title, color, startAt, endAt } = event;\n\n    // set event block's color\n    const liStyle = { backgroundColor: toHexColor(color) };\n\n    let ifToRenderTime = true,\n        ifToRenderTitle = true;\n    let aStyle = null,\n        emStyle = null;\n    if (isOnDesktop) {\n        // event duration, used to determine if to render event time and title\n        const duration = endAt - startAt;\n        // place event on a proper position of grid when render on desktop\n        const eventTop =\n            (EVENT_SLOT_HEIGHT * (startAt - timelineFrom)) /\n            TIMELINE_UNIT_DURATION;\n        const eventHeight =\n            (EVENT_SLOT_HEIGHT * duration) / TIMELINE_UNIT_DURATION;\n\n        // set top and height for event block\n        liStyle.top = `${eventTop - 1}px`;\n        liStyle.height = `${eventHeight + 1}px`;\n\n        // decide if to render time and title\n        ifToRenderTime = duration >= MIN_DURATION_TO_RENDER_TIME;\n        ifToRenderTitle = duration >= MIN_DURATION_TO_RENDER_TITLE;\n\n        // do a little extra CSS work when only render event title:\n        //     vertical center event title in event block!\n        if (!ifToRenderTime && ifToRenderTitle) {\n            emStyle = { lineHeight: liStyle.height };\n            aStyle = {\n                paddingTop: \"0em\",\n                paddingBottom: \"0em\"\n            };\n        }\n    }\n\n    return (\n        <li id={eventId} className=\"single-event\" style={liStyle}>\n            <a href=\"#0\" onClick={openModal} style={aStyle}>\n                {ifToRenderTime && (\n                    <span className=\"event-date\">\n                        {`${toTimeString(startAt)} - ${toTimeString(endAt)}`}\n                    </span>\n                )}\n                {ifToRenderTitle && (\n                    <em className=\"event-name\" style={emStyle}>\n                        {title}\n                    </em>\n                )}\n            </a>\n        </li>\n    );\n}\n\nSingleEvent.propTypes = {\n    event: PropTypes.object.isRequired,\n    openModal: PropTypes.func.isRequired,\n    timelineFrom: PropTypes.number.isRequired,\n    isOnDesktop: PropTypes.bool\n};\n\nexport default SingleEvent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Responsive from \"react-responsive\";\nimport SingleEvent from \"./SingleEvent\";\n\nimport \"../../styles/EventsGroup.css\";\n\nconst Desktop = props => <Responsive {...props} minWidth={800} />;\nconst Mobile = props => <Responsive {...props} maxWidth={799} />;\n\nexport default class EventsGroup extends Component {\n    // prop types\n    static propTypes = {\n        events: PropTypes.array.isRequired,\n        weekday: PropTypes.string.isRequired,\n        timelineFrom: PropTypes.number.isRequired,\n        ulCSSHeight: PropTypes.number.isRequired,\n        openModalWithEvent: PropTypes.func.isRequired\n    };\n\n    render() {\n        const {\n            events,\n            weekday,\n            timelineFrom,\n            ulCSSHeight,\n            openModalWithEvent\n        } = this.props;\n        return (\n            <li className=\"events-group\">\n                <div className=\"top-info\">\n                    <span>{weekday}</span>\n                </div>\n                <Desktop>\n                    <ul style={{ height: ulCSSHeight }}>\n                        {events.map(event => (\n                            <SingleEvent\n                                event={event}\n                                isOnDesktop={true}\n                                key={event.eventId}\n                                timelineFrom={timelineFrom}\n                                openModal={openModalWithEvent(event)}\n                            />\n                        ))}\n                    </ul>\n                </Desktop>\n                <Mobile>\n                    <ul>\n                        {events.map(event => (\n                            <SingleEvent\n                                event={event}\n                                isOnDesktop={false}\n                                key={event.eventId}\n                                timelineFrom={timelineFrom}\n                                openModal={openModalWithEvent(event)}\n                            />\n                        ))}\n                    </ul>\n                </Mobile>\n            </li>\n        );\n    }\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { TwitterPicker } from \"react-color\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toHexColor, toDecimal } from \"../../utils/colorConverters.js\";\nimport { toTimeString, toNumOfMinutes } from \"../../utils/timeConverters.js\";\nimport { addEvent, updateEvent, setError } from \"../../actions/eventActions.js\";\nimport {\n    WEEK_DAYS,\n    DEFAULT_EVENT,\n    COLOR_CHOICES,\n    EVENT_API_ROUTE\n} from \"../../constants\";\n\nimport \"../../styles/EventForm.css\";\n\n// styled Button component\nconst StyledButton = withStyles({\n    root: { marginLeft: 13 },\n    label: { fontSize: 13 }\n})(Button);\n\n// helper function for generating custom TextField component\nconst customTextField = color =>\n    withStyles(theme => ({\n        underline: {\n            \"&:before\": { borderBottomColor: color },\n            \"&:after\": { borderBottomColor: color }\n        },\n        input: {\n            color,\n            lineHeight: \"1.1875em\",\n            fontFamily: \"PT Sans\",\n            fontSize: \"1.6rem\"\n        },\n        label: {\n            color,\n            fontFamily: \"PT Sans\",\n            fontSize: \"1.6rem\",\n            \"&$labelFocused\": { color }\n        },\n        labelFocused: {},\n        helperText: {\n            color,\n            fontFamily: \"PT Sans\",\n            fontSize: \"1.1rem\"\n        }\n    }))(props => {\n        const { classes, ...otherProps } = props;\n        return (\n            <TextField\n                {...otherProps}\n                InputProps={{\n                    classes: {\n                        underline: classes.underline,\n                        input: classes.input\n                    }\n                }}\n                InputLabelProps={{\n                    classes: {\n                        root: classes.label,\n                        focused: classes.labelFocused\n                    }\n                }}\n                FormHelperTextProps={{\n                    classes: { root: classes.helperText }\n                }}\n            />\n        );\n    });\n\n// styled TextField component for header\nconst HeaderTextField = customTextField(\"white\");\n\n// styled TextField component for body\nconst BodyTextField = customTextField(\"black\");\n\n// There are two cases which triggers rendering edit mode modal:\n//     1. Adding event by clicking \"Add Event\" button on <Schedule />\n//     2. Updating event by clicking \"Edit\" button on view mode modal\nclass EventFormEditMode extends Component {\n    static propTypes = {\n        event: PropTypes.object,\n        events: PropTypes.array.isRequired,\n        addEvent: PropTypes.func.isRequired,\n        setError: PropTypes.func.isRequired,\n        updateEvent: PropTypes.func.isRequired,\n        setViewMode: PropTypes.func.isRequired,\n        isUserLoggedIn: PropTypes.bool.isRequired,\n        handleCloseModal: PropTypes.func.isRequired\n    };\n\n    deriveStateFrom = props => {\n        const event = props.event ? props.event : DEFAULT_EVENT;\n        const { startAt, endAt, color, ...other } = event;\n        // return an object, which should be assigned to state\n        return {\n            ...other,\n            start: toTimeString(startAt),\n            end: toTimeString(endAt),\n            headerColor: toHexColor(color),\n            isWaitingApi: false,\n            error: {}\n        };\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = this.deriveStateFrom(props);\n    }\n\n    componentDidUpdate(prevProp) {\n        if (prevProp.event !== this.props.event) {\n            this.setState(this.deriveStateFrom(this.props));\n        }\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // get values from props and state\n        const {\n            events,\n            setError,\n            addEvent,\n            updateEvent,\n            isUserLoggedIn,\n            handleCloseModal\n        } = this.props;\n        const {\n            title,\n            location,\n            description,\n            start,\n            end,\n            weekday,\n            headerColor\n        } = this.state;\n        // determine if updating event or adding event\n        const isUpdatingEvent = this.props.event ? true : false;\n        // get event id, if adding new event, assign a temporary event id\n        let eventId = isUpdatingEvent\n            ? this.props.event.eventId\n            : Date.now().toString();\n\n        // validate time interval\n        const startAt = toNumOfMinutes(start),\n            endAt = toNumOfMinutes(end);\n        if (startAt >= endAt) {\n            return this.setState({\n                error: {\n                    start: \"Invalid interval\",\n                    end: \"Invalid interval\"\n                }\n            });\n        }\n        // validate if time interval has been used by other event\n        // find events which has different id and on the same weekday\n        const arr = events.filter(\n            e => e.weekday === weekday && e.eventId !== eventId\n        );\n        for (let i = 0; i < arr.length; i++) {\n            let e = arr[i];\n            if (!(endAt <= e.startAt || startAt >= e.endAt)) {\n                // interval overlaps with an existed event\n                return this.setState({\n                    error: {\n                        start: \"Overlapping interval\",\n                        end: \"Overlapping interval\"\n                    }\n                });\n            }\n        }\n\n        // set event data from state\n        const color = toDecimal(headerColor);\n        const data = {\n            title,\n            location,\n            description,\n            startAt,\n            endAt,\n            weekday,\n            color\n        };\n\n        let promise;\n        debugger;\n        // check if user logged in, if logged in, send request to api\n        if (!isUserLoggedIn) {\n            // no user logged in, just do adding/updating locally\n            // set id\n            data.eventId = eventId;\n            // pass event data to next then()\n            promise = Promise.resolve(data);\n        } else {\n            this.setState({ isWaitingApi: true });\n            // call api, do remote thing\n            if (isUpdatingEvent) {\n                // request updating event\n                promise = axios\n                    .patch(`${EVENT_API_ROUTE}/${eventId}`, {\n                        data\n                    })\n                    .then(res => {\n                        // extract 'updatedEvent' and return to next then\n                        return res.data.data.updatedEvent;\n                    });\n            } else {\n                // request adding new event\n                promise = axios.post(`${EVENT_API_ROUTE}`, data).then(res => {\n                    // extract 'savedEvent' and return to next then\n                    return res.data.data.savedEvent;\n                });\n            }\n        }\n\n        // do local thing, change events array in redux store or handle error\n        return promise\n            .then(eventData => {\n                console.log(\"Event data: \", eventData);\n                // done waiting api\n                this.setState({ isWaitingApi: false });\n                // add/update event locally\n                if (isUpdatingEvent) updateEvent(eventData);\n                else addEvent(eventData);\n                // reset form\n                this.setState(this.deriveStateFrom(this.props));\n                // close modal\n                handleCloseModal();\n                // emit toast\n                const toastMsg = isUpdatingEvent\n                    ? \"✏️ Event updated!\"\n                    : \"📌 Event added!\";\n                toast(toastMsg);\n            })\n            .catch(err => {\n                this.setState({ isWaitingApi: false });\n                if (err.response) {\n                    // http error, dispatch set error action\n                    const errorRes = err.response.data.error;\n                    setError(errorRes);\n                    // close modal\n                    handleCloseModal();\n                } else {\n                    // local network error, just emit toast\n                    toast.warn(\"😱 Connection to server failed\");\n                }\n            });\n    };\n\n    handleColorChange = (color, event) => {\n        this.setState({ headerColor: color.hex });\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value, error: {} });\n    };\n\n    handleDiscard = event => {\n        event.preventDefault();\n        if (!this.props.event) {\n            // case 1, adding event, reset form to default and close modal\n            this.setState(this.deriveStateFrom(this.props));\n            this.props.handleCloseModal();\n        } else {\n            // case 2, updating event, back to view mode\n            this.props.setViewMode();\n        }\n    };\n\n    render() {\n        const { handleCloseModal } = this.props;\n        const {\n            title,\n            location,\n            description,\n            start,\n            end,\n            weekday,\n            headerColor,\n            isWaitingApi,\n            error\n        } = this.state;\n\n        const headerStyle = { backgroundColor: headerColor };\n\n        return (\n            <form className=\"event-form edit\" onSubmit={this.handleSubmit}>\n                <div className=\"header\" style={headerStyle}>\n                    <div className=\"content\">\n                        <HeaderTextField\n                            required\n                            id=\"title\"\n                            label=\"Title\"\n                            value={title}\n                            onChange={this.handleChange(\"title\")}\n                            margin=\"none\"\n                            error={!!error.title}\n                            helperText={error.title}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"body\">\n                    <div className=\"event-info\">\n                        <div className=\"time-picker\">\n                            <BodyTextField\n                                required\n                                type=\"time\"\n                                id=\"start\"\n                                label=\"Start\"\n                                value={start}\n                                onChange={this.handleChange(\"start\")}\n                                margin=\"none\"\n                                inputProps={{ step: 300 }}\n                                error={!!error.start}\n                                helperText={error.start}\n                            />\n                            <BodyTextField\n                                required\n                                type=\"time\"\n                                id=\"end\"\n                                label=\"End\"\n                                value={end}\n                                onChange={this.handleChange(\"end\")}\n                                margin=\"none\"\n                                inputProps={{ step: 300 }}\n                                error={!!error.end}\n                                helperText={error.end}\n                            />\n                            <BodyTextField\n                                select\n                                required\n                                id=\"weekday\"\n                                label=\"Weekday\"\n                                margin=\"none\"\n                                value={weekday}\n                                onChange={this.handleChange(\"weekday\")}\n                            >\n                                {WEEK_DAYS.map((weekday, i) => (\n                                    <MenuItem\n                                        key={i}\n                                        value={i}\n                                        style={{ fontSize: 14 }}\n                                    >\n                                        {weekday}\n                                    </MenuItem>\n                                ))}\n                            </BodyTextField>\n                        </div>\n                        <div className=\"location-textfield\">\n                            <BodyTextField\n                                fullWidth\n                                id=\"location\"\n                                label=\"Location\"\n                                value={location}\n                                onChange={this.handleChange(\"location\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div className=\"description-textfield\">\n                            <BodyTextField\n                                multiline\n                                fullWidth\n                                id=\"description\"\n                                label=\"Description\"\n                                value={description}\n                                onChange={this.handleChange(\"description\")}\n                                rows=\"3\"\n                                margin=\"normal\"\n                            />\n                        </div>\n\n                        <div className=\"color-picker\">\n                            <span className=\"color-picker-indicater\">\n                                Color *\n                            </span>\n                            <TwitterPicker\n                                triangle={\"hide\"}\n                                width={\"280px\"}\n                                color={headerColor}\n                                colors={COLOR_CHOICES}\n                                onChangeComplete={this.handleColorChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"buttons-bar\">\n                        <StyledButton\n                            onClick={this.handleDiscard}\n                            disabled={isWaitingApi}\n                        >\n                            Discard\n                        </StyledButton>\n                        <StyledButton\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={isWaitingApi}\n                        >\n                            {isWaitingApi ? \"Waiting API...\" : \"Confirm\"}\n                        </StyledButton>\n                    </div>\n                </div>\n\n                <a href=\"#0\" className=\"close\" onClick={handleCloseModal}>\n                    Close\n                </a>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isUserLoggedIn: state.User.isUserLoggedIn,\n    events: state.Event.events\n});\n\nconst mapDispatchToProps = { addEvent, updateEvent, setError };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventFormEditMode);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { toHexColor } from \"../../utils/colorConverters.js\";\nimport { DEFAULT_EVENT, EVENT_API_ROUTE } from \"../../constants\";\nimport { deleteEvents, setError } from \"../../actions/eventActions.js\";\n\nimport \"../../styles/EventForm.css\";\n\nclass EventFormViewMode extends Component {\n    static propTypes = {\n        event: PropTypes.object,\n        setError: PropTypes.func.isRequired,\n        setEditMode: PropTypes.func.isRequired,\n        deleteEvents: PropTypes.func.isRequired,\n        isUserLoggedIn: PropTypes.bool.isRequired,\n        handleCloseModal: PropTypes.func.isRequired\n    };\n\n    state = { isWaitingApi: false };\n\n    handleEditOnClick = event => {\n        event.preventDefault();\n        this.props.setEditMode();\n    };\n\n    handleDeleteOnClick = event => {\n        event.preventDefault();\n        const { deleteEvents, handleCloseModal, setError } = this.props;\n        const idsToDel = this.props.event ? [this.props.event.eventId] : [];\n        let promise;\n        if (!this.props.isUserLoggedIn) {\n            // no user logged in\n            promise = Promise.resolve(idsToDel);\n        } else {\n            this.setState({ isWaitingApi: true });\n            // call api\n            promise = axios\n                .delete(`${EVENT_API_ROUTE}`, { data: { eventIds: idsToDel } })\n                .then(res => {\n                    this.setState({ isWaitingApi: false });\n                    return res.data.data.deletedEventsId;\n                });\n        }\n        return promise\n            .then(deletedEventsId => {\n                console.log(\"Deleted events id: \", deletedEventsId);\n                // dispatch delete events action\n                deleteEvents(deletedEventsId);\n                // close modal\n                handleCloseModal();\n                // emit toast\n                toast(\"✂️ Event deleted!\");\n            })\n            .catch(err => {\n                this.setState({ isWaitingApi: false });\n                if (err.response) {\n                    // http error, dispatch set error action\n                    const errorRes = err.response.data.error;\n                    setError(errorRes);\n                    // close modal\n                    handleCloseModal();\n                } else {\n                    // local network error, just emit toast\n                    toast.warn(\"😱 Connection to server failed\");\n                }\n            });\n    };\n\n    render() {\n        const { handleCloseModal } = this.props;\n        const { isWaitingApi } = this.state;\n        const event = this.props.event ? this.props.event : DEFAULT_EVENT;\n        const { title, location, description, color, startAt, endAt } = event;\n        const headerStyle = { backgroundColor: toHexColor(color) };\n\n        return (\n            <div className=\"event-form\">\n                <div className=\"header\" style={headerStyle}>\n                    <div className=\"content\">\n                        <span className=\"event-date\">{`${toTimeString(\n                            startAt\n                        )} - ${toTimeString(endAt)}`}</span>\n                        <h3 className=\"event-name\">{title}</h3>\n                    </div>\n                </div>\n\n                <div className=\"body\">\n                    <div className=\"event-info\">\n                        {location && (\n                            <span className=\"event-location\">{location}</span>\n                        )}\n                        <div className=\"event-description\">{description}</div>\n                    </div>\n                    <div className=\"buttons-bar\">\n                        <IconButton\n                            aria-label=\"Edit\"\n                            disabled={isWaitingApi}\n                            style={{ marginLeft: 15 }}\n                            onClick={this.handleEditOnClick}\n                        >\n                            <EditIcon style={{ width: 28, height: 28 }} />\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"Delete\"\n                            disabled={isWaitingApi}\n                            style={{ marginLeft: 15 }}\n                            onClick={this.handleDeleteOnClick}\n                        >\n                            <DeleteIcon style={{ width: 28, height: 28 }} />\n                        </IconButton>\n                    </div>\n                </div>\n\n                <a href=\"#0\" className=\"close\" onClick={handleCloseModal}>\n                    Close\n                </a>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isUserLoggedIn: state.User.isUserLoggedIn\n});\n\nconst mapDispatchToProps = { deleteEvents, setError };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventFormViewMode);\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport EventFormEditMode from \"./EventFormEditMode.js\";\nimport EventFormViewMode from \"./EventFormViewMode.js\";\n\nimport \"../../styles/EventModal.css\";\n\n// login modal root in index.html\nconst eventModalRoot = document.getElementById(\"event-modal-root\");\n\n// ESC key code\nconst ESC_KEY = 27;\n\nclass EventModal extends Component {\n    static propTypes = {\n        isEditMode: PropTypes.bool,\n        eventToShow: PropTypes.object,\n        closeModal: PropTypes.func.isRequired,\n        isModalOpen: PropTypes.bool.isRequired,\n        setIsEditMode: PropTypes.func.isRequired\n    };\n\n    escKeyDownHandler = event => {\n        event.stopPropagation();\n        if (this.props.isModalOpen && event.keyCode === ESC_KEY) {\n            this.props.closeModal();\n        }\n    };\n\n    componentDidMount() {\n        // add event listener for esc key down\n        document.addEventListener(\"keydown\", this.escKeyDownHandler);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isModalOpen, eventToShow } = this.props;\n        // add class to selected event when modal opening\n        // this makes selected event block hidden on desktop\n        if (!prevProps.isModalOpen && isModalOpen && eventToShow) {\n            document\n                .getElementById(eventToShow.eventId)\n                .classList.add(\"selected-event\");\n        }\n\n        // remove class to selected event when modal closing\n        if (prevProps.isModalOpen && !isModalOpen && prevProps.eventToShow) {\n            const lastOpenEventId = prevProps.eventToShow.eventId;\n            const eventBlockDOM = document.getElementById(lastOpenEventId);\n            // event may be deleted\n            if (eventBlockDOM) eventBlockDOM.classList.remove(\"selected-event\");\n        }\n    }\n\n    componentWillUnmount() {\n        // remove event listener\n        document.removeEventListener(\"keydown\", this.escKeyDownHandler);\n    }\n\n    setViewMode = () => {\n        this.props.setIsEditMode(false);\n    };\n\n    setEditMode = () => {\n        this.props.setIsEditMode(true);\n    };\n\n    handleCloseModal = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.props.closeModal();\n    };\n\n    render() {\n        const { isModalOpen, isEditMode, eventToShow } = this.props;\n\n        return ReactDOM.createPortal(\n            <div\n                className={\n                    isModalOpen ? \"event-modal modal-is-visible\" : \"event-modal\"\n                }\n            >\n                <div className=\"cover-layer\" onClick={this.handleCloseModal} />\n                <div className=\"event-form_container\">\n                    {isEditMode ? (\n                        <EventFormEditMode\n                            event={eventToShow}\n                            setViewMode={this.setViewMode}\n                            handleCloseModal={this.handleCloseModal}\n                        />\n                    ) : (\n                        <EventFormViewMode\n                            event={eventToShow}\n                            setEditMode={this.setEditMode}\n                            handleCloseModal={this.handleCloseModal}\n                        />\n                    )}\n                </div>\n            </div>,\n            eventModalRoot\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport Timeline from \"./Timeline.js\";\nimport EventsGroup from \"./EventsGroup.js\";\nimport EventModal from \"./EventModal.js\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { logUserOut } from \"../../actions/userActions.js\";\nimport { loadUserEvents, clearError } from \"../../actions/eventActions.js\";\nimport {\n    TIMELINE_UNIT_DURATION,\n    EVENT_SLOT_HEIGHT,\n    DEFAULT_TO,\n    DEFAULT_FROM,\n    WEEK_DAYS,\n    AUTH_ERRORS,\n    EVENT_ERRORS\n} from \"../../constants\";\n\nimport \"../../styles/Schedule.css\";\n\n// styled material ui tooltip and fab\nconst StyledTooltip = withStyles({\n    tooltip: { fontSize: 13 }\n})(Tooltip);\n\nconst StyledFab = withStyles({\n    root: {\n        position: \"fixed\",\n        right: \"40px\",\n        bottom: \"35px\",\n        zIndex: 2,\n        width: \"70px\",\n        height: \"70px\"\n    }\n})(Fab);\n\nclass Schedule extends Component {\n    static propTypes = {\n        error: PropTypes.object,\n        events: PropTypes.array.isRequired,\n        logUserOut: PropTypes.func.isRequired,\n        clearError: PropTypes.func.isRequired,\n        loadUserEvents: PropTypes.func.isRequired,\n        isUserLoggedIn: PropTypes.bool.isRequired,\n        isLoadingUserEvents: PropTypes.bool.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            isEditMode: false,\n            eventToShowInModal: null,\n            ...this.organizeEventsByWeekday(props.events)\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.events !== this.props.events) {\n            // if events array changed, reorganize and set state\n            this.setState(this.organizeEventsByWeekday(this.props.events));\n        }\n        if (this.props.error) {\n            console.log(this.props.error);\n            const { error } = this.props;\n            if (error.code) {\n                // handle http error response\n                const errorName = error.name;\n                if (AUTH_ERRORS[errorName]) {\n                    let msg = \"😅 Token expired, pls sign in again\";\n                    // jwt token lost, expired or invalid\n                    if (errorName === AUTH_ERRORS.DeletedUser) {\n                        // user is deleted\n                        msg = \"😅 Account deleted, pls sign up\";\n                    }\n                    toast.warn(msg);\n                    // sign out user\n                    this.props.logUserOut();\n                } else if (EVENT_ERRORS[errorName]) {\n                    // event does not exist\n                    toast.warn(\"😅 Event not found, reloading events\");\n                    // reload user events\n                    this.props.loadUserEvents();\n                }\n            }\n            // clear error\n            this.props.clearError();\n        }\n    }\n\n    // return a click handler which bind a specific event for <SingleEvent />\n    openModalWithEvent = event => e => {\n        e.preventDefault();\n        this.setState({\n            isModalOpen: true,\n            isEditMode: false,\n            eventToShowInModal: event\n        });\n    };\n\n    setIsEditMode = (isEditMode = false) => {\n        this.setState({ isEditMode });\n    };\n\n    closeModal = event => {\n        if (event) event.preventDefault();\n        this.setState({ isModalOpen: false });\n    };\n\n    addButtonClickHandler = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({\n            isModalOpen: true,\n            isEditMode: true,\n            eventToShowInModal: null\n        });\n    };\n\n    // Iterate through given events array and organize it to a 2-D array by weekday.\n    // also compute the timeline's from and to\n    organizeEventsByWeekday = events => {\n        let timelineFrom = DEFAULT_FROM,\n            timelineTo = DEFAULT_TO;\n        const eventsByWeekday = [];\n        for (let i = 0; i < WEEK_DAYS.length; i++) {\n            eventsByWeekday[i] = [];\n        }\n        if (Array.isArray(events)) {\n            // sort events by event's startAt\n            events.sort((e1, e2) => e1.startAt - e2.startAt);\n            // loop through events\n            for (let i = 0; i < events.length; i++) {\n                let event = events[i];\n                let { weekday, startAt, endAt } = event;\n                // update timeline from\n                if (startAt < timelineFrom)\n                    timelineFrom =\n                        startAt <= 0\n                            ? 0\n                            : Math.floor(startAt / TIMELINE_UNIT_DURATION) *\n                              TIMELINE_UNIT_DURATION;\n                // update timeline to\n                if (endAt > timelineTo)\n                    timelineTo =\n                        endAt >= 1440\n                            ? 1440\n                            : Math.ceil(endAt / TIMELINE_UNIT_DURATION) *\n                              TIMELINE_UNIT_DURATION;\n                // push event to corresponding weekday events array\n                eventsByWeekday[weekday].push(event);\n            }\n        }\n\n        // compute EventsGroup's events <ul> css height\n        const eventsGroupUlHeight =\n            Math.ceil((timelineTo - timelineFrom) / TIMELINE_UNIT_DURATION) *\n            EVENT_SLOT_HEIGHT;\n\n        return {\n            eventsByWeekday,\n            timelineFrom,\n            timelineTo,\n            eventsGroupUlHeight\n        };\n    };\n\n    render() {\n        const { isLoadingUserEvents } = this.props;\n        const {\n            isEditMode,\n            isModalOpen,\n            eventToShowInModal,\n            eventsByWeekday,\n            timelineFrom,\n            timelineTo,\n            eventsGroupUlHeight\n        } = this.state;\n\n        return (\n            <div className=\"cd-schedule\">\n                {/* Loading spinner, conditional render */\n                isLoadingUserEvents && (\n                    <div className=\"progress-container\">\n                        <CircularProgress color=\"secondary\" />\n                        <div>Loading events...</div>\n                    </div>\n                )}\n                {/* timeline, on the left of events grid */}\n                <Timeline from={timelineFrom} to={timelineTo} />\n                {/* events grid */}\n                <div className=\"events\">\n                    <ul>\n                        {WEEK_DAYS.map((WEEK_DAY, i) => (\n                            <EventsGroup\n                                key={i}\n                                weekday={WEEK_DAY}\n                                events={eventsByWeekday[i]}\n                                timelineFrom={timelineFrom}\n                                ulCSSHeight={eventsGroupUlHeight}\n                                openModalWithEvent={this.openModalWithEvent}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                {/* Add event button, conditional render */\n                !isLoadingUserEvents && (\n                    <StyledTooltip\n                        title=\"Add Event\"\n                        placement=\"top\"\n                        aria-label=\"Add Event\"\n                    >\n                        <StyledFab\n                            color=\"secondary\"\n                            aria-label=\"Add\"\n                            onClick={this.addButtonClickHandler}\n                        >\n                            <AddIcon\n                                style={{ width: \"30px\", height: \"30px\" }}\n                            />\n                        </StyledFab>\n                    </StyledTooltip>\n                )}\n\n                <EventModal\n                    closeModal={this.closeModal}\n                    isEditMode={isEditMode}\n                    isModalOpen={isModalOpen}\n                    eventToShow={eventToShowInModal}\n                    setIsEditMode={this.setIsEditMode}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserLoggedIn: state.User.isUserLoggedIn,\n        isLoadingUserEvents: state.Event.isLoadingUserEvents,\n        events: state.Event.events,\n        error: state.Event.error\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { logUserOut, loadUserEvents, clearError }\n)(Schedule);\n","import React from \"react\";\n\nimport github from \"../assets/images/github-brands.svg\";\nimport \"../styles/BottomInfo.css\";\n\nexport default function BottomInfo() {\n    return (\n        <div className=\"bottom-info\">\n            <a\n                href=\"https://github.com/ALMA-DEV914\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <img src={github} alt=\"Github\" className=\"github-logo\" />\n            </a>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\nimport { signUserIn } from \"../actions/userActions.js\";\nimport { loadDemoEvents } from \"../actions/eventActions.js\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport {\n    LOCAL_USERNAME_KEY,\n    LOCAL_TOKEN_KEY,\n    LOCAL_EXPIRESAT_KEY,\n    LEAST_TOKEN_AVAILABLE_INTERVAL\n} from \"../constants\";\nimport TopBar from \"./TopBar\";\nimport Schedule from \"./Schedule\";\nimport BottomInfo from \"./BottomInfo\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"../styles/App.css\";\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nconst middlewares = [thunk];\n\n// fix app crash on browser which has no redux devtools extension\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__\n    ? compose(\n          applyMiddleware(...middlewares),\n          window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    : compose(applyMiddleware(...middlewares));\n\nconst store = createStore(reducer, enhancer);\n\n// check if token exists and valid at initialization\nconst username = localStorage.getItem(LOCAL_USERNAME_KEY);\nconst token = localStorage.getItem(LOCAL_TOKEN_KEY);\nconst expiresAt = localStorage.getItem(LOCAL_EXPIRESAT_KEY);\n// token must be valid until this time, or user need to sign in again\nconst leastValidUntil = Date.now() + LEAST_TOKEN_AVAILABLE_INTERVAL;\nif (username && token && expiresAt && expiresAt > leastValidUntil) {\n    store.dispatch(signUserIn({ username, token }, false));\n} else {\n    store.dispatch(loadDemoEvents());\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <div>\n                    <TopBar />\n                    <Schedule />\n                    <BottomInfo />\n                    <ToastContainer\n                        position={toast.POSITION.TOP_CENTER}\n                        autoClose={3500}\n                        toastClassName=\"toast\"\n                        hideProgressBar={false}\n                        newestOnTop={false}\n                        closeOnClick\n                        rtl={false}\n                        pauseOnVisibilityChange\n                        draggable\n                        pauseOnHover\n                    />\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}