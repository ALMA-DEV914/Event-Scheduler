{"ast":null,"code":"var _jsxFileName = \"/Users/almabraun/Event-Scheduler/client/src/components/Schedule/Timeline.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { TIMELINE_UNIT_DURATION } from \"../../constants\";\nimport \"../../styles/Timeline.css\"; // Timeline of Schedule\n\nfunction Timeline(props) {\n  var from = props.from,\n      to = props.to; // each element in timelist represents a vertical line in events grid\n\n  var timeList = [];\n\n  for (var time = from; time < to; time += TIMELINE_UNIT_DURATION) {\n    timeList.push(React.createElement(\"li\", {\n      key: time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, toTimeString(time))));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"timeline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, timeList));\n} // prop types\n\n\nTimeline.propTypes = {\n  from: PropTypes.number.isRequired,\n  to: PropTypes.number.isRequired\n};\nexport default Timeline;","map":{"version":3,"sources":["/Users/almabraun/Event-Scheduler/client/src/components/Schedule/Timeline.js"],"names":["React","PropTypes","toTimeString","TIMELINE_UNIT_DURATION","Timeline","props","from","to","timeList","time","push","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,OAAO,2BAAP,C,CAEA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACbC,IADa,GACAD,KADA,CACbC,IADa;AAAA,MACPC,EADO,GACAF,KADA,CACPE,EADO,EAErB;;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,IAAI,GAAGH,IAAhB,EAAsBG,IAAI,GAAGF,EAA7B,EAAiCE,IAAI,IAAIN,sBAAzC,EAAiE;AAC7DK,IAAAA,QAAQ,CAACE,IAAT,CACI;AAAI,MAAA,GAAG,EAAED,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,YAAY,CAACO,IAAD,CAAnB,CADJ,CADJ;AAKH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAL,CADJ,CADJ;AAKH,C,CAED;;;AACAJ,QAAQ,CAACO,SAAT,GAAqB;AACjBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADN;AAEjBN,EAAAA,EAAE,EAAEN,SAAS,CAACW,MAAV,CAAiBC;AAFJ,CAArB;AAKA,eAAeT,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { TIMELINE_UNIT_DURATION } from \"../../constants\";\nimport \"../../styles/Timeline.css\";\n\n// Timeline of Schedule\nfunction Timeline(props) {\n    const { from, to } = props;\n    // each element in timelist represents a vertical line in events grid\n    const timeList = [];\n    for (let time = from; time < to; time += TIMELINE_UNIT_DURATION) {\n        timeList.push(\n            <li key={time}>\n                <span>{toTimeString(time)}</span>\n            </li>\n        );\n    }\n    return (\n        <div className=\"timeline\">\n            <ul>{timeList}</ul>\n        </div>\n    );\n}\n\n// prop types\nTimeline.propTypes = {\n    from: PropTypes.number.isRequired,\n    to: PropTypes.number.isRequired\n};\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}