{"ast":null,"code":"import _classCallCheck from \"/Users/almabraun/Event-Scheduler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/almabraun/Event-Scheduler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/almabraun/Event-Scheduler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/almabraun/Event-Scheduler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/almabraun/Event-Scheduler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/almabraun/Event-Scheduler/client/src/components/Schedule/EventFormViewMode.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { toHexColor } from \"../../utils/colorConverters.js\";\nimport { DEFAULT_EVENT, EVENT_API_ROUTE } from \"../../constants\";\nimport { deleteEvents, setError } from \"../../actions/eventActions.js\";\nimport \"../../styles/EventForm.css\";\n\nvar EventFormViewMode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventFormViewMode, _Component);\n\n  function EventFormViewMode() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventFormViewMode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventFormViewMode)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isWaitingApi: false\n    };\n\n    _this.handleEditOnClick = function (event) {\n      event.preventDefault();\n\n      _this.props.setEditMode();\n    };\n\n    _this.handleDeleteOnClick = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          deleteEvents = _this$props.deleteEvents,\n          handleCloseModal = _this$props.handleCloseModal,\n          setError = _this$props.setError;\n      var idsToDel = _this.props.event ? [_this.props.event.eventId] : [];\n      var promise;\n\n      if (!_this.props.isUserLoggedIn) {\n        // no user logged in\n        promise = Promise.resolve(idsToDel);\n      } else {\n        _this.setState({\n          isWaitingApi: true\n        }); // call api\n\n\n        promise = axios.delete(\"\".concat(EVENT_API_ROUTE), {\n          data: {\n            eventIds: idsToDel\n          }\n        }).then(function (res) {\n          _this.setState({\n            isWaitingApi: false\n          });\n\n          return res.data.data.deletedEventsId;\n        });\n      }\n\n      return promise.then(function (deletedEventsId) {\n        console.log(\"Deleted events id: \", deletedEventsId); // dispatch delete events action\n\n        deleteEvents(deletedEventsId); // close modal\n\n        handleCloseModal(); // emit toast\n\n        toast(\"✂️ Event deleted!\");\n      }).catch(function (err) {\n        _this.setState({\n          isWaitingApi: false\n        });\n\n        if (err.response) {\n          // http error, dispatch set error action\n          var errorRes = err.response.data.error;\n          setError(errorRes); // close modal\n\n          handleCloseModal();\n        } else {\n          // local network error, just emit toast\n          toast.warn(\"😱 Connection to server failed\");\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EventFormViewMode, [{\n    key: \"render\",\n    value: function render() {\n      var handleCloseModal = this.props.handleCloseModal;\n      var isWaitingApi = this.state.isWaitingApi;\n      var event = this.props.event ? this.props.event : DEFAULT_EVENT;\n      var title = event.title,\n          location = event.location,\n          description = event.description,\n          color = event.color,\n          startAt = event.startAt,\n          endAt = event.endAt;\n      var headerStyle = {\n        backgroundColor: toHexColor(color)\n      };\n      return React.createElement(\"div\", {\n        className: \"event-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        style: headerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"event-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\".concat(toTimeString(startAt), \" - \").concat(toTimeString(endAt))), React.createElement(\"h3\", {\n        className: \"event-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, title))), React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"event-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, location && React.createElement(\"span\", {\n        className: \"event-location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, location), React.createElement(\"div\", {\n        className: \"event-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, description)), React.createElement(\"div\", {\n        className: \"buttons-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Edit\",\n        disabled: isWaitingApi,\n        style: {\n          marginLeft: 15\n        },\n        onClick: this.handleEditOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        style: {\n          width: 28,\n          height: 28\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        \"aria-label\": \"Delete\",\n        disabled: isWaitingApi,\n        style: {\n          marginLeft: 15\n        },\n        onClick: this.handleDeleteOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        style: {\n          width: 28,\n          height: 28\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))), React.createElement(\"a\", {\n        href: \"#0\",\n        className: \"close\",\n        onClick: handleCloseModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Close\"));\n    }\n  }]);\n\n  return EventFormViewMode;\n}(Component);\n\nEventFormViewMode.propTypes = {\n  event: PropTypes.object,\n  setError: PropTypes.func.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n  deleteEvents: PropTypes.func.isRequired,\n  isUserLoggedIn: PropTypes.bool.isRequired,\n  handleCloseModal: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isUserLoggedIn: state.User.isUserLoggedIn\n  };\n};\n\nvar mapDispatchToProps = {\n  deleteEvents: deleteEvents,\n  setError: setError\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventFormViewMode);","map":{"version":3,"sources":["/Users/almabraun/Event-Scheduler/client/src/components/Schedule/EventFormViewMode.js"],"names":["axios","React","Component","PropTypes","connect","toast","EditIcon","DeleteIcon","IconButton","toTimeString","toHexColor","DEFAULT_EVENT","EVENT_API_ROUTE","deleteEvents","setError","EventFormViewMode","state","isWaitingApi","handleEditOnClick","event","preventDefault","props","setEditMode","handleDeleteOnClick","handleCloseModal","idsToDel","eventId","promise","isUserLoggedIn","Promise","resolve","setState","delete","data","eventIds","then","res","deletedEventsId","console","log","catch","err","response","errorRes","error","warn","title","location","description","color","startAt","endAt","headerStyle","backgroundColor","marginLeft","width","height","propTypes","object","func","isRequired","bool","mapStateToProps","User","mapDispatchToProps"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { toTimeString } from \"../../utils/timeConverters.js\";\nimport { toHexColor } from \"../../utils/colorConverters.js\";\nimport { DEFAULT_EVENT, EVENT_API_ROUTE } from \"../../constants\";\nimport { deleteEvents, setError } from \"../../actions/eventActions.js\";\n\nimport \"../../styles/EventForm.css\";\n\nclass EventFormViewMode extends Component {\n    static propTypes = {\n        event: PropTypes.object,\n        setError: PropTypes.func.isRequired,\n        setEditMode: PropTypes.func.isRequired,\n        deleteEvents: PropTypes.func.isRequired,\n        isUserLoggedIn: PropTypes.bool.isRequired,\n        handleCloseModal: PropTypes.func.isRequired\n    };\n\n    state = { isWaitingApi: false };\n\n    handleEditOnClick = event => {\n        event.preventDefault();\n        this.props.setEditMode();\n    };\n\n    handleDeleteOnClick = event => {\n        event.preventDefault();\n        const { deleteEvents, handleCloseModal, setError } = this.props;\n        const idsToDel = this.props.event ? [this.props.event.eventId] : [];\n        let promise;\n        if (!this.props.isUserLoggedIn) {\n            // no user logged in\n            promise = Promise.resolve(idsToDel);\n        } else {\n            this.setState({ isWaitingApi: true });\n            // call api\n            promise = axios\n                .delete(`${EVENT_API_ROUTE}`, { data: { eventIds: idsToDel } })\n                .then(res => {\n                    this.setState({ isWaitingApi: false });\n                    return res.data.data.deletedEventsId;\n                });\n        }\n        return promise\n            .then(deletedEventsId => {\n                console.log(\"Deleted events id: \", deletedEventsId);\n                // dispatch delete events action\n                deleteEvents(deletedEventsId);\n                // close modal\n                handleCloseModal();\n                // emit toast\n                toast(\"✂️ Event deleted!\");\n            })\n            .catch(err => {\n                this.setState({ isWaitingApi: false });\n                if (err.response) {\n                    // http error, dispatch set error action\n                    const errorRes = err.response.data.error;\n                    setError(errorRes);\n                    // close modal\n                    handleCloseModal();\n                } else {\n                    // local network error, just emit toast\n                    toast.warn(\"😱 Connection to server failed\");\n                }\n            });\n    };\n\n    render() {\n        const { handleCloseModal } = this.props;\n        const { isWaitingApi } = this.state;\n        const event = this.props.event ? this.props.event : DEFAULT_EVENT;\n        const { title, location, description, color, startAt, endAt } = event;\n        const headerStyle = { backgroundColor: toHexColor(color) };\n\n        return (\n            <div className=\"event-form\">\n                <div className=\"header\" style={headerStyle}>\n                    <div className=\"content\">\n                        <span className=\"event-date\">{`${toTimeString(\n                            startAt\n                        )} - ${toTimeString(endAt)}`}</span>\n                        <h3 className=\"event-name\">{title}</h3>\n                    </div>\n                </div>\n\n                <div className=\"body\">\n                    <div className=\"event-info\">\n                        {location && (\n                            <span className=\"event-location\">{location}</span>\n                        )}\n                        <div className=\"event-description\">{description}</div>\n                    </div>\n                    <div className=\"buttons-bar\">\n                        <IconButton\n                            aria-label=\"Edit\"\n                            disabled={isWaitingApi}\n                            style={{ marginLeft: 15 }}\n                            onClick={this.handleEditOnClick}\n                        >\n                            <EditIcon style={{ width: 28, height: 28 }} />\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"Delete\"\n                            disabled={isWaitingApi}\n                            style={{ marginLeft: 15 }}\n                            onClick={this.handleDeleteOnClick}\n                        >\n                            <DeleteIcon style={{ width: 28, height: 28 }} />\n                        </IconButton>\n                    </div>\n                </div>\n\n                <a href=\"#0\" className=\"close\" onClick={handleCloseModal}>\n                    Close\n                </a>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isUserLoggedIn: state.User.isUserLoggedIn\n});\n\nconst mapDispatchToProps = { deleteEvents, setError };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EventFormViewMode);\n"]},"metadata":{},"sourceType":"module"}